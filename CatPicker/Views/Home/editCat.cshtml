@model Models.ViewModels.CatRecVM

@{
  ViewBag.Title = "editCat";
}

<h2>editCat</h2>

@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "X", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.catRec.Id)

    <div class="form-group">
      @Html.LabelFor(model => model.catRec.name, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.catRec.name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catRec.name, "X", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.catPersonalityList[0].personalityType, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.catRec.catPersonalityId, new SelectList(Model.catPersonalityList, "Id", "personalityType", 2), new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catPersonalityList[0].personalityType, "X", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.catBreedList[0].breedName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.catRec.breedId, new SelectList(Model.catBreedList, "Id", "breedName", 2), new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catBreedList[0].breedName, "X", new { @class = "text-danger" })
      </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.catDetailList[0].description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.DropDownListFor(model => model.catRec.catDetailsId, new SelectList(Model.catDetailList, "Id", "description", 2), new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.catDetailList[0].description, "", new { @class = "text-danger" })
        </div>
      </div>*@

    @*<div class="form-group">
        @Html.LabelFor(model => model.catRec.locationId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.catRec.locationId, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.catRec.locationId, "", new { @class = "text-danger" })
        </div>
      </div>*@


    @*<div class="form-group">
        @Html.LabelFor(model => model.catDetail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.catDetail, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.catDetail, "", new { @class = "text-danger" })
        </div>
      </div>*@

    <div class="form-group">
      @Html.LabelFor(model => model.detailRec.description, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.detailRec.description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.detailRec.description, "X", new { @class = "text-danger" })
        @*Hidden fields to preserve ID fields*@
        @Html.HiddenFor(model => model.detailRec.Id)
        @Html.HiddenFor(model => model.detailRec.catId)
        
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.catRec.age, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.catRec.age, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catRec.age, "X", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.catRec.pic, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.catRec.pic, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catRec.pic, "X", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.catRec.gender, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.catRec.gender, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catRec.gender, "X", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.catRec.mainColor, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.catRec.mainColor, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catRec.mainColor, "X", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.catRec.secondColor, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.catRec.secondColor, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catRec.secondColor, "X", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.catRec.thirdColor, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.catRec.thirdColor, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catRec.thirdColor, "X", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.catRec.weight, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.catRec.weight, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catRec.weight, "X", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.catRec.arrivalDate, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.catRec.arrivalDate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catRec.arrivalDate, "X", new { @class = "text-danger" })
      </div>
    </div>

    @*<div class="form-group">*@
    <div class="col-md-offset-2 col-md-10">
      <input type="button" id="btnSave" onclick="saveCat()" value="Save" class="btn btn-default" />
      @*<input type="submit" value="Save" class="btn btn-default" />*@
    </div>
    @*</div>*@
  </div>



  var message = "";
  if (TempData["msg"] != null)
  {
    message = TempData["msg"].ToString();

  }
  else
  {
    message = "";

  }

  <div style="display:inline-block; width:355px">
    <div style="float:left">Message:</div><div id="msg" style="width:320px"> @message</div>
  </div>
}

<script type="text/javascript">
  function saveCat() {
    if (confirm("Save your data ?")) {
      //alert("true");
      $("form").submit();
    } else {
      //alert("false");
      $("div#msg").text("");
      return false;
    }
  }
</script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>


<div>
  @Html.ActionLink("Back to List", "Index")
</div>
