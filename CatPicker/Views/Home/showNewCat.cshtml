@model Models.ViewModels.CatRecVM


<h2>Add a Cat</h2>

@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

<div class="form-horizontal">

  <hr />
  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  @Html.HiddenFor(model => model.catList[0].Id)

  <div class="form-group">
    @Html.LabelFor(model => model.catList[0].name, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.catList[0].name, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.catList[0].name, "", new { @class = "text-danger" })
    </div>
  </div>


  @*<div class="form-group">
      @Html.LabelFor(model => model.catPersonalityList[0].personalityType, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.catRec.catPersonalityId, new SelectList(Model.catPersonalityList, "Id", "personalityType", 2), new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catPersonalityList[0].personalityType, "", new { @class = "text-danger" })
      </div>
    </div>*@


  <div class="form-group">
    @Html.LabelFor(model => model.catBreedList[0].breedName, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.DropDownListFor(model => model.catList[0].breedId, new SelectList(Model.catBreedList, "Id", "breedName", Model.catList[0].breedId), new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.catBreedList[0].breedName, "X", new { @class = "text-danger" })
    </div>
  </div>

  @*<div class="form-group">
      @Html.LabelFor(model => model.catDetailList[0].description, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.catRec.catDetailsId, new SelectList(Model.catDetailList, "Id", "description", 2), new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catDetailList[0].description, "", new { @class = "text-danger" })
      </div>
    </div>*@

  @*<div class="form-group">
      @Html.LabelFor(model => model.catRec.locationId, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.catRec.locationId, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catRec.locationId, "", new { @class = "text-danger" })
      </div>
    </div>*@


  @*<div class="form-group">
      @Html.LabelFor(model => model.catDetail, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.catDetail, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.catDetail, "", new { @class = "text-danger" })
      </div>
    </div>*@

  @*<div class="form-group">
      @Html.LabelFor(model => model.detailRec.description, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.detailRec.description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.detailRec.description, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.detailRec.Id)
        @Html.HiddenFor(model => model.detailRec.catId)
      </div>
    </div>*@

  <div class="form-group">
    @Html.LabelFor(model => model.catList[0].age, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.catList[0].age, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.catList[0].age, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.catList[0].pic, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.catList[0].pic, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.catList[0].pic, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.catList[0].gender, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.catList[0].gender, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.catList[0].gender, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.catList[0].mainColor, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.catList[0].mainColor, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.catList[0].mainColor, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.catList[0].secondColor, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.catList[0].secondColor, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.catList[0].secondColor, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.catList[0].thirdColor, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.catList[0].thirdColor, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.catList[0].thirdColor, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.catList[0].arrivalDate, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.catList[0].arrivalDate, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.catList[0].arrivalDate, "", new { @class = "text-danger" })
    </div>
  </div>

  @*<div class="form-group">*@
  <div class="col-md-offset-2 col-md-10">
    <input type="button" id="btnSave" onclick="saveCat()" value="Save" class="btn btn-default" />
    @*<input type="submit" value="Save" class="btn btn-default" />*@
  </div>
  @*</div>*@
</div>



  var message = "";
  if (TempData["msg"] != null)
  {
    message = TempData["msg"].ToString();

  }
  else
  {
    message = "";

  }

  <div style="display:inline-block; width:355px">
    <div style="float:left">Message:</div><div id="msg" style="width:320px"> @message</div>
  </div>
}

<script type="text/javascript">
  function saveCat() {
    if (confirm("Save your data ?")) {
      //alert("true");
      $("form").attr('@Url.Action("createNewCatRec", "Home")');
      $("form").submit();
    } else {
      //alert("false");
      $("div#msg").text("");
      return false;
    }
  }

</script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<div>
  @Html.ActionLink("Back to List", "showAllCats")
</div>
